<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx.xsd  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd"
>

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:config.properties"/>
	<!--  配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc_url}"/>
        <property name="user" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>

        <!-- 获取连接超时时间   -->
        <property name="checkoutTimeout" value="10000"/>
        <!--  连接池在获得新连接失败时重试的次数，如果小于等于0则无限重试直至连接获得成功。-->
        <property name="acquireRetryAttempts" value="2"></property>
        <!-- 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查   -->
        <property name="idleConnectionTestPeriod" value="60"/>
        <!-- 连接数据库连接池最大空闲时间   -->
        <property name="maxIdleTime" value="30"/>
        <!--   连接池初始化连接数   -->
        <property name="initialPoolSize" value="10"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="50"/>
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3   -->
        <property name="acquireIncrement" value="5"/>
        <!-- 连接池在回收数据库连接时是否自动提交事务。
        	如果为false，则会回滚未提交的事务，如果为true，
        	则会自动提交事务。default : false（不建议使用） -->
        <property name="autoCommitOnClose" value="false"></property>
    </bean>

    <!-- 配置mybatis的sqlsessionfactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <!-- 扫描entity包 使用别名  不用写类名前的包名-->
        <property name="typeAliasesPackage" value="com.chendi.jiyi.entity"></property>
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mybatis-mapper/*.xml"></property>
    </bean>

    <!-- 配置扫描dao接口包，动态实现dao接口，并注入到spring容易中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 给出扫描dao接口包 -->
        <property name="basePackage" value="com.chendi.jiyi.dao"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans> 